package bot

import (
	"log"
	"os"
	"strings"
	"testing"
)

// -------------------------
// –¢–µ—Å—Ç pickPhrase
// -------------------------

func TestPickPhrase(t *testing.T) {
	for i := 0; i < 10; i++ {
		p := pickPhrase()
		if len(p) < 3 {
			t.Errorf("—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è —Ñ—Ä–∞–∑–∞: %q", p)
		}
		if idx := strings.IndexRune(p, ' '); idx <= 0 {
			t.Errorf("–û–∂–∏–¥–∞–ª—Å—è –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ –∏–∫–æ–Ω–∫–∏: %q", p)
		}
	}
}

// -------------------------
// –¢–µ—Å—Ç Timeouts
// -------------------------

func TestTimeoutCommandSetGet(t *testing.T) {
	to := NewTimeouts()
	to.Set(1, 42)
	if got := to.Get(1); got != 42 {
		t.Errorf("–æ–∂–∏–¥–∞–ª–æ—Å—å 42, –ø–æ–ª—É—á–∏–ª–∏ %d", got)
	}
	to.Save("test_timeouts.json", log.Default())
	loaded := NewTimeouts()
	loaded.Load("test_timeouts.json", log.Default())
	if got := loaded.Get(1); got != 42 {
		t.Errorf("–ø–æ—Å–ª–µ Load –æ–∂–∏–¥–∞–ª–æ—Å—å 42, –ø–æ–ª—É—á–∏–ª–∏ %d", got)
	}
	_ = os.Remove("test_timeouts.json")
}

// -------------------------
// –¢–µ—Å—Ç progressBar
// -------------------------

func TestProgressBar(t *testing.T) {
	bar := progressBar(10, 5)
	if len(bar) < 3 {
		t.Errorf("progressBar —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π: %q", bar)
	}
}

func TestProgressBarBlocks(t *testing.T) {
	bar := progressBar(10, 7) // done = 3
	if strings.Count(bar, "‚ñà") != 3 {
		t.Errorf("–æ–∂–∏–¥–∞–ª–æ—Å—å 3 –±–ª–æ–∫–∞ '‚ñà', –ø–æ–ª—É—á–∏–ª–∏ %d", strings.Count(bar, "‚ñà"))
	}
	if strings.Count(bar, "‚ñë") != 7 {
		t.Errorf("–æ–∂–∏–¥–∞–ª–æ—Å—å 7 –±–ª–æ–∫–∞ '‚ñë', –ø–æ–ª—É—á–∏–ª–∏ %d", strings.Count(bar, "‚ñë"))
	}
}

// -------------------------
// –¢–µ—Å—Ç nextClockEmoji
// -------------------------

func TestRandomClockEmoji(t *testing.T) {
	emoji := nextClockEmoji()
	if emoji == "" {
		t.Errorf("emoji –ø—É—Å—Ç–æ–π")
	}
}

func TestRandomClockEmojiValid(t *testing.T) {
	valid := map[string]bool{"üïê": true, "üïí": true, "üïï": true, "üïò": true, "üïõ": true}
	for i := 0; i < 20; i++ {
		e := nextClockEmoji()
		if !valid[e] {
			t.Errorf("–Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π emoji: %q", e)
		}
	}
}
